<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PhonelistDataSet1" targetNamespace="http://tempuri.org/PhonelistDataSet1.xsd" xmlns:mstns="http://tempuri.org/PhonelistDataSet1.xsd" xmlns="http://tempuri.org/PhonelistDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PhonelistConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PhonelistConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DatabaseStudy.Properties.Settings.GlobalReference.Default.PhonelistConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonAgeTableAdapter" GeneratorDataComponentClassName="PersonAgeTableAdapter" Name="PersonAge" UserDataComponentName="PersonAgeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PhonelistConnectionString (Settings)" DbObjectName="dbo.PersonAge" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonAge] WHERE (([PersonID] = @Original_PersonID) AND ([PersonName] = @Original_PersonName) AND ([PersonAge] = @Original_PersonAge))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonAge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonAge" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonAge] ([PersonID], [PersonName], [PersonAge]) VALUES (@PersonID, @PersonName, @PersonAge);
SELECT PersonID, PersonName, PersonAge FROM PersonAge WHERE (PersonID = @PersonID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonAge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonAge" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PersonID, PersonName, PersonAge FROM dbo.PersonAge</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonAge] SET [PersonID] = @PersonID, [PersonName] = @PersonName, [PersonAge] = @PersonAge WHERE (([PersonID] = @Original_PersonID) AND ([PersonName] = @Original_PersonName) AND ([PersonAge] = @Original_PersonAge));
SELECT PersonID, PersonName, PersonAge FROM PersonAge WHERE (PersonID = @PersonID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonAge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonAge" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonAge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonAge" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PersonID" DataSetColumn="PersonID" />
              <Mapping SourceColumn="PersonName" DataSetColumn="PersonName" />
              <Mapping SourceColumn="PersonAge" DataSetColumn="PersonAge" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PhonelistDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PhonelistDataSet1" msprop:Generator_UserDSName="PhonelistDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PersonAge" msprop:Generator_TableClassName="PersonAgeDataTable" msprop:Generator_TableVarName="tablePersonAge" msprop:Generator_TablePropName="PersonAge" msprop:Generator_RowDeletingName="PersonAgeRowDeleting" msprop:Generator_RowChangingName="PersonAgeRowChanging" msprop:Generator_RowEvHandlerName="PersonAgeRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonAgeRowDeleted" msprop:Generator_UserTableName="PersonAge" msprop:Generator_RowChangedName="PersonAgeRowChanged" msprop:Generator_RowEvArgName="PersonAgeRowChangeEvent" msprop:Generator_RowClassName="PersonAgeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PersonID" msprop:Generator_ColumnVarNameInTable="columnPersonID" msprop:Generator_ColumnPropNameInRow="PersonID" msprop:Generator_ColumnPropNameInTable="PersonIDColumn" msprop:Generator_UserColumnName="PersonID" type="xs:int" />
              <xs:element name="PersonName" msprop:Generator_ColumnVarNameInTable="columnPersonName" msprop:Generator_ColumnPropNameInRow="PersonName" msprop:Generator_ColumnPropNameInTable="PersonNameColumn" msprop:Generator_UserColumnName="PersonName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PersonAge" msprop:Generator_ColumnVarNameInTable="columnPersonAge" msprop:Generator_ColumnPropNameInRow="PersonAge" msprop:Generator_ColumnPropNameInTable="PersonAgeColumn" msprop:Generator_UserColumnName="PersonAge" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonAge" />
      <xs:field xpath="mstns:PersonID" />
    </xs:unique>
  </xs:element>
</xs:schema>